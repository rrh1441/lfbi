# fly.toml — DealBrief-Scanner (updated)

app            = "dealbrief-scanner"
primary_region = "sea"

[build]
  platform = "linux/amd64"

[env]
  # Nuclei timeouts - tiered for baseline vs deep-dive scans
  NUCLEI_BASELINE_TIMEOUT_MS = "12000"     # 12s for baseline scans (most templates < 3s)
  NUCLEI_HEADLESS_TIMEOUT_MS = "90000"     # 90s for deep-dive scans with headless
  NUCLEI_CONCURRENCY = "32"                # Increase concurrency - VM was 65% idle
  NUCLEI_RETRIES = "2"
  
  NODE_TLS_REJECT_UNAUTHORIZED = "0"

# ────────────── Processes ──────────────
[processes]
  api            = "npx tsx apps/api-main/server.ts"
  scanner_worker = "npx tsx apps/workers/worker.ts"
  sync_worker    = "npm run start --prefix apps/sync-worker"

  # Always-on template updater - pulls once every 24 h
  updater        = "sh -c 'while true; do run_nuclei -update-templates; sleep 86400; done'"

# ────────────── HTTP service (API) ──────────────
[http_service]
  internal_port        = 3000
  force_https          = true
  auto_stop_machines   = "off"   # keep API live
  auto_start_machines  = true
  min_machines_running = 1
  processes            = ["api"]

# Scanner worker: Scale to zero when idle, high RAM when running
[[services]]
  processes = ['scanner_worker']
  auto_stop_machines = true   # ✅ Scale to ZERO when idle (saves money)
  auto_start_machines = true  # Auto-start when scan triggered
  min_machines_running = 0    # ✅ No idle cost
  max_machines_running = 10   # ✅ Support up to 10 parallel scans

# Sync worker: Always running for continuous sync
[[services]]
  processes = ['sync_worker']
  auto_stop_machines = false  # Keep running
  auto_start_machines = true  # Auto-start when needed
  min_machines_running = 1    # Always keep 1 running

# ────────────── VM sizes ──────────────
# API — small & always on
[[vm]]
  memory    = "256mb"
  cpu_kind  = "shared"
  cpus      = 1
  processes = ["api"]

[[vm]] # VM for the scanner worker - High RAM for scan bursts
  memory = '4gb'    # Keep high RAM for memory-intensive scans
  cpu_kind = 'performance'
  cpus = 1
  processes = ['scanner_worker']

[[vm]] # VM for the sync worker - Minimal RAM for DB operations
  memory = '256mb'  # ✅ Reduced from 512MB - just DB sync
  cpu_kind = 'shared'
  cpus = 1
  processes = ['sync_worker']

# Template updater — tiny, no Chrome
[[vm]]
  memory    = "512mb"     # enough for `git` + unzip
  cpu_kind  = "shared"
  cpus      = 1
  processes = ["updater"]
